The kernel and device/xilinx branches are different from our standard Android build.  You will want to checkout
the dev/mwalter/aurora-basler branch of both of those repositories.

============================================================
You will need to flash a specific FSBL to run this TRD-based Android system

The FSBL files are in device/xilinx/aurora/aurora and you can flash them in the normal way
(e.g. program_flash -f BOOT.BIN -offset 0 -flash_type qspi_single -fsbl fsbl_3.elf -cable type xilinx_tcf url TCP:127.0.0.1:3121)

(BOOT.BIN and fsbl_3.elf are the files)

============================================================
When running lunch, select aurora-eng

If you run into trouble building external/v4l-utils, I have provided a copy of a working source tree at
device/xilinx/aurora/v4l-utils-14.2-working

The v4l-utils for the Mentor/Xilinx Android port are provided by Mentor and are supposed to work, but
I have had some issues (mostly the order things get built in, so if you re-run the build a few times
it eventually works).  So if you run into trouble with that you should be able to just copy my version
over to /external/v4l-utils.

============================================================
To create the SD-Card:
Format the card in the following way
Parition:  FS-Type:    Size:            Purpose
1          FAT         1G               boot
2          ext4        1G               /root
3          extended    20G              
4          ext4        remaining        /data
5          ext4        10G              /system
6          ext4        10G              /cache

The files in out/target/product/aurora/boot should be placed into the boot partition
A set of files from a working device have been placed in device/xilinx/aurora/aurora
in case a problem arises.

*NOTE* You will have to rename iveia-aurora-basler.dtb to iveia-aurora.dtb
Look at the contents of boot.scr to see how the boot process works

The default is to boot using a ramdisk, so the root partition does not matter
The FSBL burned earlier defaults to running the boot.scr script to boot the system.  You
can look at the contents of that script to see how the boot proceeds.

The uboot.env (which gets loaded by u-boot) contains a command to run the script
mystuff=load mmc 0:1 0x02000000 boot.scr ; source 0x02000000

out/target/product/aurora/system.img should be copied to the system partition using dd

============================================================
The camera capture application does not start automatically.  You will want to start it by running
iv_v4_hal -d
The -d means enable debug printing, which is a lot.  After that a lot of text will flow by, and you
cannot communicate with the server until that happens.

To capture an image from the command line, run the following commands.  You will have to press Ctrl-C
in between each one to break out of the listen loop
iv_v4_hal_client -d --init
iv_v4_hal_client -d --cimg
iv_v4_hal_client -d --gimg /data/data.yuv

To stream images run the following series of commands.  The files will be save to /data
iv_v4_hal_client -d --init
iv_v4_hal_client --ccap on 1

